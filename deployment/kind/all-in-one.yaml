apiVersion: v1
kind: Namespace
metadata:
  name: cisco-terraform
---
apiVersion: v1
kind: Service
metadata:
  name: clustermgr
  namespace: cisco-terraform
  labels:
    service: clustermgr
spec:
  ports:
  - name: clustermgr
    port: 80
    targetPort: 8089
  selector:
    service: clustermgr
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clustermgr
  namespace: cisco-terraform
  labels:
    service: clustermgr
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      service: clustermgr
  template:
    metadata:
      labels:
        service: clustermgr
    spec:
      restartPolicy: Always
      volumes:
      containers:
      - name: clustermgr
        image: clustermgr:v1
        imagePullPolicy: IfNotPresent
        env:
          - name: ARGO_KAFKA_ADDR
            value: "kafka-svc:9092"
        ports:
        - containerPort: 8089
        command: ["/bin/cluster"]
        args: ["-config.file", "/bin/config_kind.json"]
---
apiVersion: v1
kind: Service
metadata:
  name: nodemgr
  namespace: cisco-terraform
  labels:
    service: nodemgr
spec:
  ports:
  - name: nodemgr
    port: 80
    targetPort: 8089
  selector:
    service: nodemgr
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodemgr
  namespace: cisco-terraform
  labels:
    service: nodemgr
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      service: nodemgr
  template:
    metadata:
      labels:
        service: nodemgr
    spec:
      restartPolicy: Always
      containers:
      - name: nodemgr
        image: nodemgr:v1
        imagePullPolicy: IfNotPresent
        env:
          - name: ARGO_KAFKA_ADDR
            value: "kafka-svc:9092"
        ports:
        - containerPort: 8089
        command: ["/bin/node"]
        args: ["-config.file", "/bin/config_kind.json"]
